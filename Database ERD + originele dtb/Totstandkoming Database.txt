


Dit document bevat de attributenlijst voor de database die gebruikt zal worden in het project.
Het opstellen van het ERD zal plaatsvinden via de stappen die de projectgroep is aangeleerd tijdens 
de lessen ERD. De kennis komt uit Syllabus ERD (Maarten Strunk, 2003). 

Wat wordt er vasgelegd?
Allereerst bekijkt de projectgroep wat er vastgelegd moet worden. 

Van de gebruiker wil de projectgroep in ieder geval een unieke gebruikersnaam met een wachtwoord voor 
de beveiliging van de database (en zo dus de web-applicatie). Naast de inloggegevens moet de projectgroep
bijhouden welke gebruiker welke URL's heeft toegevoegd aan zijn/haar tegeltjes. Er is gelijk een idee
om ruimte te besparen door niet elke gebruiker een aparte regel te geven met de URL maar om alle URL's te 
bewaren in 1 centrale tabel die gekoppeld kan worden aan gebruikers. 

Het gevolg hiervan is, is dat de projectgroep ruimte bespaart aangezien het eerste plan erg op een 
Cartetisch product lijkt.

Naast de gebruikers (gebruikersnaam,wachtwoord en emailadres) is het handig om dus een aparte tabel te 
maken voor alle verschillende URL's. Van de websites wil de projectgroep de URL weten en als dat
geïmplementeerd kan worden, plaatjes om aan te geven welke website het is. Bijvoorbeeld bij YouTube dat 
het logo in de tegel komt te staan, maar dat is voor latere zorg. Eerst een database ontwerpen en bouwen die 
de gebruikers kan opslaan en uitlezen.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
(versie 0.5)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<ZIE ERD VERSIE 0.5>
Onderdeel 1: attributenlijst
- Gebruiker: Gebruikersnaam, Wachtwoord.
- Website: URL, (optioneel LOGO).
- Geeft weer: Gebruiker.Gebruikersnaam , Website.URL.

Onderdeel 2: sleutels (!= sleutel, % = verwijssleutel)
- Gebruiker: !Gebruikersnaam!, Wachtwoord.
- Website: !URL!, (optioneel LOGO).
- Geeft weer: %Gebruiker.Gebruikersnaam% , %Website.URL%.

Onderdeel 3:
- Gebruiker: !Gebruikersnaam!, Wachtwoord.
- Website: !URL!, (optioneel LOGO).
- Geeft weer: %Gebruiker.Gebruikersnaam% , %Website.URL%.
(de relatie kan niet ondergeschoven worden aangezien aan de linkerkant er 
een T op N-relatie is en aan de rechterkant zich een O op 1-relatie bevindt).

SQL statement voor het maken van de database:

Tabel gebruikers:
CREATE TABLE Gebruikers
(
Gebruikersnaam VARCHAR(20) PRIMARY KEY ,
Wachtwoord VARCHAR(128) NOT NULL
);

Tabel Website:
CREATE TABLE Websites
(
URL VARCHAR(255)
);

Tabel Geeft_Weer:
CREATE TABLE Geeft_Weer
(
Gebruikersnaam VARCHAR(20),
URL VARCHAR(255),
FOREIGN KEY (Gebruikersnaam) REFERENCES Gebruikers(Gebruikersnaam),
FOREIGN KEY (URL) REFERENCES Websites(URL)
);


Na het maken van deze database ziet de projectgroep direct een aantal verbeterpunten:
- Hoe houden we nu bij of een Gebruiker een ADMIN is of een gebruiker?
ANTWOORD: Met een IS_EEN relatie op de tabel gebruikers
- Is het niet ruimtebesparend om alles een sleutel te geven in de vorm van een nummer?
ANTWOORD: het kan, maar hoeft niet. Voor het overzicht doen we het wel. De ADMIN tabellen en 
GEBRUIKER tabellen zullen dan alleen cijfers bevatten en geen namen en dat levert weer 
een ruimtebesparing op.
- De tabel websites bestaat nu uit een URL, kunnen we nog dingen toevoegen?
ANTWOORD: Ja, we kunnen nog omschrijving en logo toevoegen. De projectgroep moet dan wel goed opletten hoe dit 
ook geïmplementeerd gaat worden in de web-applicatie. 

--------------------------------------------------------------------------------------------------------------------------------
VERSIE 0.6
--------------------------------------------------------------------------------------------------------------------------------

<ZIE ERD VERSIE 0.6>
entiteiten + attributen
LID: Gebruikersnaam, Wachtwoord, E_mail
WEBSITE: Hyperlink, naam    
SPEL: SpelNaam, Omschrijving
ADMIN: Gebruikersnaam
GEBRUIKER: Gebruikersnaam

Toevoegen relaties + sleutels (!x! = primaire sleutel, %x% = verwijssleutel)
LID: !Lidnr!, Gebruikersnaam, Wachtwoord, E_mail
WEBSITE: !URLnr!, Hyperlink, Website_naam
SPEL: !Spelnr!, Spel_naam, Omschrijving
ADMIN: %Lidnr%
GEBRUIKER: %Lidnr%
Geeft_weer1: %Lidnr%, %Linknr%
Geeft_weer2: %Lidnr%, %Spelnr%

SQL tabel LID:
CREATE TABLE LID
(
Lidnr AUTOINCREMENT PRIMARY KEY,
Gebruikersnaam VARCHAR(20) UNIQUE,
Wachtwoord VARCHAR(255) UNIQUE,
E_mail VARCHAR(255) UNIQUE
);

SQL tabel WEBSITE:
CREATE TABLE WEBSITES
(
URLnr AUTOINCREMENT PRIMARY KEY,
Hyperlink VARCHAR(255) NOT NULL,
Website_naam VARCHAR(255)
);
 
SQL tabel SPEL:
CREATE TABLE SPEL
(
Spelnr AUTOINCREMENT PRIMARY KEY,
Spel_naam VARCHAR(255) NOT NULL,
Omschrijving VARCHAR(255)
);

SQL tabel ADMIN:
CREATE TABLE ADMIN
(
Lidnr INTEGER CONSTRAINT Lidnr PRIMARY KEY REFERENCES LID (Lidnr)
);

SQL tabel GEBRUIKER:
CREATE TABLE GEBRUIKER
(
Lidnr INTEGER CONSTRAINT Lidnr PRIMARY KEY REFERENCES LID (Lidnr)
);

SQL tabel Geeft_weer1:
CREATE TABLE Geeft_weer1
(
Lidnr INTEGER CONSTRAINT Lidnr UNIQUE REFERENCES LID (Lidnr),
URLnr INTEGER CONSTRAINT URLnr UNIQUE REFERENCES WEBSITES (URLnr)
);

SQL tabel Geeft_weer2:
CREATE TABLE Geeft_weer2
(
Lidnr INTEGER CONSTRAINT Lidnr UNIQUE REFERENCES LID (Lidnr),
Spelnr INTEGER CONSTRAINT Spelnr UNIQUE REFERENCES SPEL (Spelnr)
);


NOTITIE: In deze SQL's zijn de 'ON CASCADE' en 'ON DELETE' constraints nog niet opgenomen, de projectgroep heeft 
een werkende database nodig om de web-applicatie te kunnen testen.



--------------------------------------------------------------------------------------------------------------------------------
VERSIE 1.0
--------------------------------------------------------------------------------------------------------------------------------

<ZIE ERD Versie 1.0>
entiteiten + attributen
LID: Usern, WW(salt+hash), e-mail
WEBSITE:hyperlink, logo_url, websiteNaam   
SPEL: Spelnaam, BronUrl, Omschrijving
ROL: Rolnr, omschrijving

Toevoegen relaties + sleutels (!x! = primaire sleutel, %x% = verwijssleutel)

ROL: !Rolnr!, Omschrijving
LID: !Lidnr!, Usern, Password, E-mail, %Rolnr%
WEBSITE: !Webnr!, Hyperlink, Logo_URL, W_Omschr
SPEL: !Spelnr!, Spelnaam, BronUrl, Omschrijving
heeft: %Lidnr%, %Spelnr%
Toegevoegd: %Webnr%, %Lidnr%

SQLS -----------------------------------------------------------------------------------------------------------------

TABEL ROL SQL:
CREATE TABLE ROL (
Rolnr AUTOINCREMENT PRIMARY KEY,
Omschrijving VARCHAR(255)
);

TABEL LID SQL
CREATE TABLE LID
(
Lidnr AUTOINCREMENT PRIMARY KEY,
Gebruikersnaam VARCHAR(20) UNIQUE,
Wachtwoord VARCHAR(255) UNIQUE,
E_mail VARCHAR(255) UNIQUE,
Rolnr INT,
FOREIGN KEY (Rolnr) REFERENCES ROL(Rolnr)
);

TABEL WEBSITE SQL
CREATE TABLE WEBSITE (
Webnr AUTOINCREMENT PRIMARY KEY,
Hyperlink VARCHAR(255) NOT NULL,
Logo_URL VARCHAR(255), 
W_Omschrijving VARCHAR(255)
);

TABEL SPEL SQL
CREATE TABLE SPEL (
Spelnr AUTOINCREMENT PRIMARY KEY,
SpelNaam VARCHAR(50) NOT NULL,
Omschrijving VARCHAR (255),
BronURL VARCHAR(255) NOT NULL
);

TABEL heeft SQL
CREATE TABLE heeft (
Lidnr int,
Spelnr int,
FOREIGN KEY (Lidnr) REFERENCES LID(Lidnr),
FOREIGN KEY (Spelnr) REFERENCES SPEL(Spelnr)
);

TABEL toegevoegd SQL
CREATE TABLE toegevoegd (
Webnr int, 
Lidnr int,
FOREIGN KEY (Webnr) REFERENCES WEBSITE(Webnr),
FOREIGN KEY (Lidnr) REFERENCES LID(Lidnr)
);

Veranderingen: 
- Rollen onderverdeeld in Rolnr en LID.Rolnr verwijst nu naar een rol in de tabel Rol.
- Verschillende namen veranderd.






BRON:
Hulp met CREATE SQL https://stackoverflow.com/questions/6000278/ms-access-create-table-with-autoincrement-and-default-date
Hulp met Foreign KEYS https://www.w3schools.com/sql/sql_foreignkey.asp
Hulp bij maken ERD : Syllabus Gegevens modelleren
















